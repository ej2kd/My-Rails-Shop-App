---
AWSTemplateFormatVersion: 2010-09-09
Parameters:
  KeyName:
    Type: String
    Description: Key pair of the instance
  MyIpParameter:
    Type: String
    Description: Your current public IP address
    NoEcho: true
  DBUserName:
    Type: String
    Description: User name for DB instance
  DBPassword:
    Type: String
    Description: Password for DB instance
    NoEcho: true
Resources:
# Network
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 172.16.0.0/16
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: vpc-for-rails-app
# InternetGateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: rails-app-igw
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
# Public Subnet
  PublicSubnet1a:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 172.16.0.0/24
      AvailabilityZone: !Select
        - '0'
        - !GetAZs ''
      Tags:
        - Key: Name
          Value: rails-app-public-1a
  PublicSubnet1c:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 172.16.1.0/24
      AvailabilityZone: !Select
        - '1'
        - !GetAZs ''
      Tags:
        - Key: Name
          Value: rails-app-public-1c
# Private Subnet
  PrivateSubnet1a:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 172.16.2.0/24
      AvailabilityZone: !Select
        - '0'
        - !GetAZs ''
      Tags:
        - Key: Name
          Value: rails-app-private-1a
  PrivateSubnet1c:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 172.16.3.0/24
      AvailabilityZone: !Select
        - '1'
        - !GetAZs ''
      Tags:
        - Key: Name
          Value: rails-app-private-1c
# Route table for public subnets
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: PublicRouteTable
  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway 
  PublicSubnetRouteTableAssociation1a:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1a
  PublicSubnetRouteTableAssociation1c:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1c
# Route table for private subnets
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: PrivateRouteTable
  PrivateSubnetRouteTableAssociation1a:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet1a
  PrivateSubnetRouteTableAssociation1c:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet1c
# Web server
  RailsAppWebServer:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: ap-northeast-1a
      # ami-0341a145fc49dbee3
      ImageId: ami-0218d08a1f9dac831
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      NetworkInterfaces:
        - DeviceIndex: 0
          AssociatePublicIpAddress: true
          SubnetId: !Ref PublicSubnet1a
          GroupSet:
            - !Ref ServerSecurityGroup
      Tags:
        - Key: Name
          Value: WebServer
  ServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22, and allow connections ftom ELB via port 80
      GroupName: WebServer-SG
      SecurityGroupIngress:
        - CidrIp: !Join ['', [!Ref MyIpParameter, '/32']]
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
        - SourceSecurityGroupId: !GetAtt [ LoadBalancerSecurityGroup, GroupId ]
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: WebServer-SG
# Load balancer
  LoadBalancerTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      HealthCheckPort: traffic-port
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      Matcher:
        HttpCode: 200
      Name: rails-app-target-group
      Port: 80
      Protocol: HTTP
      ProtocolVersion: HTTP1
      Targets: 
        - Id: !Ref RailsAppWebServer
          Port: 80
      VpcId: !Ref VPC
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: ALB-for-rails-app
      Scheme: internet-facing
      Subnets:
        - !Ref PublicSubnet1a
        - !Ref PublicSubnet1c
      SecurityGroups:
        - !Ref LoadBalancerSecurityGroup
  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties: 
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref LoadBalancerTargetGroup
  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: allow connections from the Internet
      GroupName: ALB-SG
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
      VpcId: !Ref VPC
# Database
  RdsInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 20
      DBInstanceClass: db.t2.micro
      DBInstanceIdentifier: rails-app-db
      DBName: rails_app_db
      VPCSecurityGroups:
        - !Ref RdsSecurityByEC2SecurityGroup
      DBSubnetGroupName: !Ref RdsSubnetGroup
      Engine: MySQL
      EngineVersion: 8.0.23
      MasterUsername: !Ref DBUserName
      MasterUserPassword: !Ref DBPassword
      MultiAZ: false
      PubliclyAccessible: false
      StorageEncrypted: false
  RdsSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: DB Subnet Group for Rails App
      DBSubnetGroupName: RailsAppDBSubnetGroup
      SubnetIds:
        - !Ref PrivateSubnet1a
        - !Ref PrivateSubnet1c
  RdsSecurityByEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: RDS-SG
      GroupDescription: allow connections from Web Server
      SecurityGroupIngress:
      - SourceSecurityGroupId: !GetAtt [ ServerSecurityGroup, GroupId ]
        IpProtocol: tcp
        FromPort: 3306
        ToPort: 3306
      VpcId: !Ref VPC
Outputs:
# Output network info
  VPC:
    Description: VPC
    Value: !Ref VPC
  AZ1:
    Description: Availability Zone 1
    Value: !GetAtt
      - PublicSubnet1a
      - AvailabilityZone
  AZ2:
    Description: Availability Zone 2
    Value: !GetAtt
      - PublicSubnet1c
      - AvailabilityZone
# Output Loadbalancer DNS
  ALB:
    Description: DNS url of Application Load Balancer
    Value: !GetAtt ApplicationLoadBalancer.DNSName
# Output EC2 instance ID
  EC2Instance:
    Description: EC2 instance
    Value: !Ref RailsAppWebServer
